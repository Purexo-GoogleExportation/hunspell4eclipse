<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         point="com.lorands.hunspell4eclipse.content.governor">
      <governor
            class="com.lorands.hunspell4eclipse.javaspell.JavaSpellEngine"
            governsContentTypeId="org.eclipse.jdt.core.javaSource"
            label="Java Spell"
            nameFilter="*.java">
         <contentType
               governsContentTypeId="org.eclipse.jdt.core.javaSource">
         </contentType>
      </governor>
   </extension>
   <extension
         id="jcpc1"
         point="org.eclipse.jdt.ui.javaCompletionProposalComputer">
      <javaCompletionProposalComputer
            activate="true"
            categoryId="org.eclipse.jdt.ui.defaultProposalCategory"
            class="com.lorands.hunspell4eclipse.javaspell.HunspellJavaCompletionProposalComputer">
      </javaCompletionProposalComputer>
   </extension>
   <extension
   		id="qfp1"
         point="org.eclipse.jdt.ui.quickFixProcessors">
      <quickFixProcessor
            class="com.lorands.hunspell4eclipse.javaspell.HunspellQuickFixProcessor.XXX"
            id="HunspellQuickFixProcessor"
            name="Hunspell QuickFix Processor">
            <!-- 
            Since 3.2 an extension can specify which problem marker types it can handle. 
            It will only get problems of these types to process. If no handled marker type are specified, 
            the processor will only get problems of types 
            org.eclipse.jdt.core.problem, 
            org.eclipse.jdt.core.buildpath_problem and 
            org.eclipse.jdt.core.task (compatible to the behaviour prior to 3.2).
            
            annotation vs marker : see  http://www.eclipsezone.com/eclipse/forums/t82973.html
            -->
         <handledMarkerTypes>
            <markerType id="???" />
         </handledMarkerTypes>
      </quickFixProcessor>
   </extension>
</plugin>
